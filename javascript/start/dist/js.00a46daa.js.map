{"version":3,"sources":["js/index.js"],"names":["container","document","querySelector","total","addProductBtn","Row","product","price","id","render","arr","elems","map","e","totalCost","reduce","prev","curr","Number","innerHTML","join","getData","uri","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","JSON","parse","response","open","send","loadAndRender","alert"],"mappings":"AAAA;AACA,MAAMA,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;AACjD,MAAMC,KAAK,GAAGF,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;AAC9C,MAAME,aAAa,GAAGH,QAAQ,CAACC,aAAa,CAAC,gBAAgB,CAAC;AAE9D,MAAMG,GAAG,GAAGA,CAAC;EAAEC,OAAO;EAAEC,KAAK;EAACC;AAAG,CAAC,KAChC;AACF,0BAA0BF,OAAO;AACjC,2BAA2BC,KAAK;AAChC,iEAAiEC,EAAE;AACnE,OAAO;AAEP,MAAMC,MAAM,GAAG,SAAAA,CAAUC,GAAG,EAAE;EAC5B,MAAMC,KAAK,GAAGD,GAAG,CAACE,GAAG,CAAEC,CAAC,IAAKR,GAAG,CAACQ,CAAC,CAAC,CAAC;EACpC,MAAMC,SAAS,GAAGJ,GAAG,CAACK,MAAM,CAAC,CAACC,IAAI,EAAEC,IAAI,KAAKD,IAAI,GAAGE,MAAM,CAACD,IAAI,CAACV,KAAK,CAAC,EAAE,CAAC,CAAC;EAE1EP,SAAS,CAACmB,SAAS,GAAGR,KAAK,CAACS,IAAI,CAAC,EAAE,CAAC;EACpCjB,KAAK,CAACgB,SAAS,GAAGd,GAAG,CAAC;IAAEC,OAAO,EAAE,OAAO;IAAEC,KAAK,EAAEO;EAAU,CAAC,CAAC;AAC/D,CAAC;AAED,MAAMO,OAAO,GAAIC,GAAG,IAClB,IAAIC,OAAO,CAAC,CAACC,OAAO,EAACC,MAAM,KAAG;EAC5B,MAAMC,GAAG,GAAG,IAAIC,cAAc,CAAC,CAAC;EAChCD,GAAG,CAACE,gBAAgB,CAAC,MAAM,EAAC,YAAU;IACpCJ,OAAO,CAACK,IAAI,CAACC,KAAK,CAAC,IAAI,CAACC,QAAQ,CAAC,CAAC;EACpC,CAAC,CAAC;EACFL,GAAG,CAACE,gBAAgB,CAAC,OAAO,EAAE,MAAMH,MAAM,CAAC,CAAC,CAAC;EAC7CC,GAAG,CAACM,IAAI,CAAC,KAAK,EAAEV,GAAG,CAAC;EACpBI,GAAG,CAACO,IAAI,CAAC,CAAC;AACZ,CAAC,CAAC;AAIJ,eAAeC,aAAaA,CAAA,EAAE;EAC5B,IAAG;IACD,MAAM5B,OAAO,GAAI,MAAMe,OAAO,CAAC,gCAAgC,CAAC;IAChEZ,MAAM,CAACH,OAAO,CAAC;EACjB,CAAC,OAAK;IACJ6B,KAAK,CAAC,uBAAuB,CAAC;EAChC;AACF;AAEAD,aAAa,CAAC,CAAC","file":"js.00a46daa.js","sourceRoot":"..\\src","sourcesContent":["// Write your code here...\nconst container = document.querySelector('.list');\nconst total = document.querySelector('.total');\nconst addProductBtn = document.querySelector('#addProductBtn');\n\nconst Row = ({ product, price,id }) =>\n  `<div class=\"product\">\n<span class=\"prod-name\">${product}</span>\n<span class=\"prod-cost\">$${price}</span>\n<div class=\"delete-btn\"><a href=\"#\" name=\"delete-btn\" data-id=\"${id}\">X</a></div>\n</div>`;\n\nconst render = function (arr) {\n  const elems = arr.map((e) => Row(e));\n  const totalCost = arr.reduce((prev, curr) => prev + Number(curr.price), 0);\n\n  container.innerHTML = elems.join('');\n  total.innerHTML = Row({ product: 'TOTAL', price: totalCost });\n};\n\nconst getData = (uri) =>\n  new Promise((resolve,reject)=>{\n    const xhr = new XMLHttpRequest();\n    xhr.addEventListener('load',function(){\n      resolve(JSON.parse(this.response))\n    })\n    xhr.addEventListener('error', () => reject());\n    xhr.open('GET', uri);\n    xhr.send();\n  });\n\n\n\nasync function loadAndRender(){\n  try{\n    const product =  await getData('http://localhost:3000/products')\n    render(product);\n  }catch{\n    alert(\"Error in getting data\")\n  }\n}\n\nloadAndRender();\n\n\n"]}