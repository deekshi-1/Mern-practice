{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\practice\\\\Routing\\\\src\\\\components\\\\RecipeList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Layout, Col, Typography } from \"antd\";\nimport { getRecipes } from \"../api\";\nimport RecipeCard from \"./RecipeCard\";\nimport { useParams, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\nconst RecipeList = () => {\n  _s();\n  const {\n    category\n  } = useParams();\n  const [recipes, setRecipes] = useState([]);\n  useEffect(() => {\n    getRecipes(category).then(data => setRecipes(data));\n  }, [category]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      level: 3,\n      children: category.toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      span: 24,\n      align: \"center\",\n      children: recipes && recipes.map(recipe => /*#__PURE__*/_jsxDEV(RecipeCard, {\n        recipe: recipe\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 43\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipeList, \"CExtW6ntdE2Btv1YFPyeg8ILbYo=\", false, function () {\n  return [useParams];\n});\n_c = RecipeList;\nexport default RecipeList;\nvar _c;\n$RefreshReg$(_c, \"RecipeList\");","map":{"version":3,"names":["React","useState","useEffect","Layout","Col","Typography","getRecipes","RecipeCard","useParams","Link","jsxDEV","_jsxDEV","Title","RecipeList","_s","category","recipes","setRecipes","then","data","children","level","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","span","align","map","recipe","_c","$RefreshReg$"],"sources":["D:/projects/practice/Routing/src/components/RecipeList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Layout, Col, Typography } from \"antd\";\nimport { getRecipes } from \"../api\";\nimport RecipeCard from \"./RecipeCard\";\nimport {useParams,Link} from 'react-router-dom'\n\nconst { Title } = Typography;\nconst RecipeList = () => {\n  const {category} = useParams();\n  const [recipes, setRecipes] = useState([]);\n  useEffect(() => {\n    getRecipes(category).then(data => setRecipes(data));\n  }, [category]);\n  return (\n    <Layout>\n      <Title level={3}>{category.toUpperCase()}</Title>\n      <Col span={24} align=\"center\">\n        {recipes && recipes.map(recipe => <RecipeCard recipe={recipe} />)}\n      </Col>\n    </Layout>\n  );\n};\n\nexport default RecipeList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,GAAG,EAAEC,UAAU,QAAQ,MAAM;AAC9C,SAASC,UAAU,QAAQ,QAAQ;AACnC,OAAOC,UAAU,MAAM,cAAc;AACrC,SAAQC,SAAS,EAACC,IAAI,QAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAM;EAAEC;AAAM,CAAC,GAAGP,UAAU;AAC5B,MAAMQ,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAACC;EAAQ,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC9B,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1CC,SAAS,CAAC,MAAM;IACdI,UAAU,CAACS,QAAQ,CAAC,CAACG,IAAI,CAACC,IAAI,IAAIF,UAAU,CAACE,IAAI,CAAC,CAAC;EACrD,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EACd,oBACEJ,OAAA,CAACR,MAAM;IAAAiB,QAAA,gBACLT,OAAA,CAACC,KAAK;MAACS,KAAK,EAAE,CAAE;MAAAD,QAAA,EAAEL,QAAQ,CAACO,WAAW,CAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjDf,OAAA,CAACP,GAAG;MAACuB,IAAI,EAAE,EAAG;MAACC,KAAK,EAAC,QAAQ;MAAAR,QAAA,EAC1BJ,OAAO,IAAIA,OAAO,CAACa,GAAG,CAACC,MAAM,iBAAInB,OAAA,CAACJ,UAAU;QAACuB,MAAM,EAAEA;MAAO;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb,CAAC;AAACZ,EAAA,CAdID,UAAU;EAAA,QACKL,SAAS;AAAA;AAAAuB,EAAA,GADxBlB,UAAU;AAgBhB,eAAeA,UAAU;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}